<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-ws="http://www.springframework.org/schema/integration/ws"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/ws http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd">

	<context:component-scan base-package="com.koitoer.spring.integration" />

	<int:gateway id="systemEntry" 
		service-interface="com.koitoer.spring.integration.service.AsyncTicketService" 
		default-request-channel="requestChannel" />
	
	<int:channel id="requestChannel">
   		<int:queue />
	</int:channel>
	
	<int-ws:outbound-gateway id="marshallingGateway"
		request-channel="requestChannel" reply-channel="responseChannel"
		uri="http://localhost:8080/spring-webservices/tickets"
		unmarshaller="marshaller" marshaller="marshaller"
		message-sender="messageSender"
		interceptor="myInterceptor">
		<int:poller fixed-rate="500" />
	</int-ws:outbound-gateway>
	
	<int:channel id="responseChannel" />
	
	<int:service-activator ref="clientServiceActivator" method="handleServiceResult" input-channel="responseChannel" />
	
	<oxm:jaxb2-marshaller id="marshaller" contextPath="com.koitoer.spring.webservice.domain" />
	
	<!-- Service invocation failed -->
	<int:router ref="serviceRouter" method="handleServiceError" input-channel="errorChannel"/>
	<int:channel id="retryChannel" />
	<int:channel id="failedChannel" />
	
	<bean id="messageSender" class="org.springframework.ws.transport.http.HttpComponentsMessageSender">
	    <property name="connectionTimeout" value="5000"/>
	    <property name="readTimeout" value="10000"/>
	</bean>
	
	<bean id="myInterceptor" class="com.koitoer.spring.integration.webservice.interceptor.MyInterceptor" />


	<!-- Retry -->
	<int:service-activator ref="clientServiceActivator" method="retryFailedInvocation" input-channel="retryChannel" />
	 
	<int:inbound-channel-adapter id="retryAdapter" channel="requestChannel"
	    ref="clientServiceActivator" method="retryInvocation" auto-startup="false">
	 
	    <int:poller cron="0/10 * * * * *"/>
	</int:inbound-channel-adapter>
	 
	<!-- Log failed invocation -->
	<int:service-activator ref="clientServiceActivator" method="handleFailedInvocation" input-channel="failedChannel" />
	

	<bean id="retryAdvice" class="org.springframework.integration.handler.advice.RequestHandlerRetryAdvice" >
    <property name="retryTemplate">
        <bean class="org.springframework.retry.support.RetryTemplate">
            <property name="backOffPolicy">
                <bean class="org.springframework.retry.backoff.FixedBackOffPolicy">
                    <property name="backOffPeriod" value="5000" />
                </bean>
            </property>
            <property name="retryPolicy">
                <bean class="org.springframework.retry.policy.SimpleRetryPolicy">
                    <property name="maxAttempts" value="5" />
                </bean>
            </property>
        </bean>
    </property>
</bean>
</beans>